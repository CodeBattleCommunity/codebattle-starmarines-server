<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%> 
<%@taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%> 
<h3>Как происходит игра</h3>
<p>Сервер собирает команды от игроков, участвующих в игре. Раз в две секунды сервер пересчитывает карту с учетом полученных от игроков команд.</p>
<p>Процесс пересчета юнитов на каждой планете происходит следующим образом:</p>
<ul>
	<li>Вычисляется количество юнитов хозяина планеты, с учетом улетевших с этой планеты и прилетевших на нее юнитов этого игрока.</li>
    <i>При этом, в галактике могут происходить катаклизмы и планетарные катастрофы, которые способны нанести урон боевым дронам, сократив их количество <a href="#disasters">по правилам возникновения катастроф</a><br/>
      А также, могут открываться <a href="#portals">червоточины</a>, через которые можно направлять своих дронов, минуя стандартные траектории передвижения по галактике.
    </i>
	<li>Получившееся количество увеличивается по <a href="#regeneration">правилам регенерации</a> юнитов для этой планеты.</li>
	<li>После этого происходит выбор нового хозяина планеты (в случае, если на планету были посланы чьи-то еще юниты). Хозяином планеты становится игрок с наибольшим количеством юнитов. При этом юниты всех остальных игроков уничтожаются, а у победителя остается число юнитов, на которое он превосходил следующего по численности игрока.
	<br />
	<i>Например, если на планете после регенерации было 220 юнитов одного игрока, и еще двое прислали по 100 и 225 юнитов, хозяином планеты станет игрок, приславший 225 юнитов, и на планете останется только 5 юнитов.</i>
	</li>
</ul>

<h3 id="regeneration">Правила регенерации</h3>
<p>На каждом шаге число юнитов на планете увеличивается. Для каждого типа планет задан процент и предел регенерации. При регенерации количество юнитов на планете увеличивается на заданный процент, но не более предельного количества (при этом на планете может находиться сколь угодно много юнитов, но если их число больше предельного количества, регенерация происходить не будет). На данный момент существуют типы планет со следующими параметрами:
<ul>
	<li>тип TYPE_A: процент регенерации - 10%, предел - 100 юнитов</li>
	<li>тип TYPE_B: процент регенерации - 15%, предел - 200 юнитов.</li>
	<li>тип TYPE_C: процент регенерации - 20%, предел - 500 юнитов.</li>
	<li>тип TYPE_D: процент регенерации - 30%, предел - 1000 юнитов.</li>
</ul>

<h3 id="disasters">Катаклизмы</h3>
<p>В начале каждого игрового тика возможно возникновение планетарных или межпланетарных катастроф:</p>
<ul>
  <li>тип METEOR: в любую планету, с вероятностью ${disasterSettings.localDisasterProbability * 100}% на игровой тик, может врезаться метеор, уничтожив ${disasterSettings.localDisasterDamage * 100}% находящихся на ней дронов <br/>
    Общее количество катастроф на планетах в каждый момент времени ограничено: их может быть не больше ${disasterSettings.localDisasterFactor * 100}% от общего количества планет. <br/>
    Катаклизм может продолжаться ${disasterSettings.localDisasterTtl} игровых тиков подряд.
  </li>
  <li>тип BLACK_HOLE: между любых планет, с вероятностью ${disasterSettings.interPlanetDisasterProbability * 100}% на игровой тик, может возникнуть черная дыра, уничтожив ${disasterSettings.interPlanetDisasterDamage * 100}% перемещающихся между этими планетами дронов.<br/>
    Количество черных дыр в каждый момент времени также ограничено: их может быть не более ${disasterSettings.interPlanetDisasterFactor * 100}% от общего количества связей между планет (ребер графа).<br/>
    Черная дыра остаётся открытой до ${disasterSettings.interPlanetDisasterTtl} игровых тиков.
  </li>
</ul>

<h3 id="portals">Порталы</h3>
<p>Кроме катаклизмов, в галактике периодически могут открываться червоточины между рандомными планетами, через которые можно отправить своих дронов на планету противника. <br/>
  Портал может открыться в любом игровом тике с вероятностью ${portalSettings.portalFactor * 100}% от количества связей между планет, и оставаться открытым в течение ${portalSettings.portalTtl} тиков.
  <i>Будьте внимательны, порталы работают в обе стороны!</i>
</p>
<br/>
<br/>

<h3>Как подключить бота к серверу</h3>
<p>Сервер игры доступен для подключения через веб-сокет по URI <i>/galaxy</i>
<br/>
<br/>
<h3>Что и как отправлять на сервер</h3>
<p>Идентификация игроков происходит по уникальному ключу, который присваивается каждому игроку при регистрации и может быть изменен по желанию игрока (при условии, что в этот момент игрок не участвует ни в одной игре). Узнать или изменить свой ключ можно на странице <a href='<c:url value="/profile.html"></c:url>'>"<spring:message code="label.menu.profile" />".</a></p>
<p><b>Важно:</b> при установке соединения по вебсокету необходимо отправить в запросе заголовок ,либо query параметр "token", с уникальным токеном игрока, который можно посмотреть в разделе "Профиль"</p>
<p>По окончании каждого игрового тика сервер отправляет на клиент снапшот галактики с информацией о текущем расположении боевых дронов игроков, галактических стихийных бедствиях, а также информацию об ошибках (если одна из отправленных команд игрока является невалидной)</p>
<p>Если пользователь не участвует ни в одной игре или игра уже закончена, сервер сразу пришлет ответ с соответствующей ошибкой, например:</p>
<pre class="code">
{
  "planets": [],
  "errors": [
    "User already connected"
  ]
}
</pre>

<p>Если игра начата, ответом будет описание игрового поля в следующем виде:</p>

<pre class="code">
{
  "planets": [
    {
      "id": 64,
      "droids": 11,
      "owner": "bot",
      "type": "TYPE_C",
      "neighbours": [
        65,
        63,
        79
      ]
    },
    {
      "id": 65,
      "droids": 27,
      "owner": "bot",
      "type": "TYPE_C",
      "neighbours": [
        64,
        80,
        66,
        56,
        63
      ]
    },
	// ...
    {
      "id": 62,
      "droids": 8,
      "owner": "bot6",
      "type": "TYPE_B",
      "neighbours": [
        55,
        61,
        77,
        78,
        63,
        79
      ]
    },
    {
      "id": 63,
      "droids": 12,
      "owner": "bot",
      "type": "TYPE_B",
      "neighbours": [
        64,
        65,
        55,
        56,
        62,
        79
      ]
    }
  ],
  "disasters": [
    {
      "type": "BLACK_HOLE",
      "sourcePlanetId": 9,
      "targetPlanetId": 7
    },
    {
      "type": "BLACK_HOLE",
      "sourcePlanetId": 5,
      "targetPlanetId": 4
    },
    // ...
    {
      "type": "METEOR",
      "planetId": 6
    }
  ],
  "portals": [
    {
      "source": 11,
      "target": 9
    },
    // ...
    {
      "source": 8,
      "target": 20
    }
  ]
  "errors": []
}
</pre>

<p>Исходя из этих данных приложение игрока должно сформировать ответ. Ответ содержит список команд для передвижения юнитов, например:</p>

<pre class="code">
{
  "actions": [
    {
      "from": 67,
      "to": 66,
      "unitsCount": 15
    },
    {
      "from": 67,
      "to": 68,
      "unitsCount": 15
    },
    {
      "from": 67,
      "to": 56,
      "unitsCount": 18
    },
    {
      "from": 67,
      "to": 57,
      "unitsCount": 18
    },
    {
      "from": 81,
      "to": 67,
      "unitsCount": 13
    }
  ]
}
</pre>

<p>Ответы на все ошибочные запросы отсылаются сервером почти сразу. Ответ на корректный запрос отсылается сервером после того, как в игре происходит следующий ход, и содержит описание игрового поля после этого хода.</p>
<p>Важное замечание: если запрос был синтаксически корректен, но некоторые из заданных в нем команд невыполнимы (например, команда переслать юнитов с планеты, не принадлежащей игроку, команда переслать больше юнитов, чем есть на планете и т. п), запрос будет считаться корректным и ответ придет только на следующем шаге. При этом в конце ответа будут добавлены сообщения с обнаруженными ошибками.</p>
<p>После отсылки сообщения сервер закрывает соединение, и все последующие действия потребуют создания новых соединений.</p>

<p>Игра завершается, когда на карте остается только один игрок или количество ходов превышает заданный организатором предел. При достижении предела победителем выбирается игрок с максимальным суммарным количеством юнитов на всех его планетах.<p>
<br/>
<br/>

<h3 id="ws-err-codes">Коды ошибок сервера</h3>
<p>В случае, если на сервере произошла ошибка достаточно критичная, чтобы прервать соединение с клиентом, клиент получит стандартный код. Один из:</p>
<table border="1" width="80%">
  <tr>
    <th>Код</th>
    <th>Описание</th>
  </tr>
  <tr>
    <td>1001</td><td>Закрытие сессии по окончании игры</td>

  </tr>
  <tr>
    <td>1007</td><td>От клиента получены некорректные данные. Либо, вы пытаетесь подсоединиться к уже завершенной игре</td>
  </tr>
  <tr>
    <td>1008</td><td>Отсутствует токен пользователя при подключении. Либо, клиент с указанным токеном уже подключен к игре <br>(в таким случае убедитесь, что предыщущий запущенный клиент завершил работу)</td>
  </tr>
  <tr>
    <td>1009</td><td>Превышен разрешенный лимит action'ов от клиента</td>
  </tr>
</table>

<h3 id="example">Пример бота на Java</h3>
<p>Исходный код клиентов можно найти <a href="${docInfo.gameClientsURL}">здесь</a>.
<p>Исходный код на <a href="${docInfo.gameSourcesURL}">в git репозитории</a> </p>
